#!/bin/bash
cd /tmp/rom # Depends on where source got synced
rm -rf .repo & # lets remove unnecessary things, so that no storage issue can occur

# Normal build steps
. build/envsetup.sh
lunch havoc_lava-userdebug
export CCACHE_DIR=/tmp/ccache
export CCACHE_EXEC=$(which ccache)
export USE_CCACHE=1
ccache -M 60G # It took only 6.4GB for mido
ccache -o compression=true # Will save times and data to download and upload ccache, also negligible performance issue
ccache -z # Clear old stats, so monitor script will provide real ccache statistics

# Next 8 lines should be run first to collect ccache and then upload, after doning it 1 or 2 times, our ccache will help to build without these 8 lines
make api-stubs-docs || echo no problem
make hiddenapi-lists-docs || echo no problem
make system-api-stubs-docs || echo no problem
make test-api-stubs-docs || echo no problem
make bacon -j10 &
sleep 100m
kill $(pidof soong_ui)
kill $(pidof make)
#and dont use below codes for first 1 or 2 times, to get ccache uploaded,


# upload function for uploading rom zip file! I don't want unwanted builds in my google drive haha!
up(){
	curl --upload-file $1 https://transfer.sh/$(basename $1); echo
	# 14 days, 10 GB limit
}

# Build command! j10 for 10 cpu, j8 for 8 cpu, otherwise memeroy will end up even its 24G
# Upload rom zip file if succeed to build! Send notification to tg! And send shell to tg if build fails!

# make api-stubs-docs -j10
# make system-api-stubs-docs -j10
# make test-api-stubs-docs -j10
# make bacon -j10
# if [[ ($ls out/target/product/* | grep .zip) ]]; then 
# 	cd out/target/product/*
# 	curl --upload-file *.zip https://transfer.sh/
# fi

